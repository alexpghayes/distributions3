% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{apply_dpqr}
\alias{apply_dpqr}
\alias{make_support}
\alias{make_positive_integer}
\title{Utilities for \code{distributions3} objects}
\usage{
apply_dpqr(d, FUN, at, drop = TRUE, type = NULL, ...)

make_support(min, max, d, drop = TRUE)

make_positive_integer(n)
}
\arguments{
\item{d}{A \code{distributions3} object.}

\item{FUN}{Function to be computed. Function should be of type \code{FUN(at, d)}, see details below.}

\item{at}{Specification of values at which \code{FUN} should be
evaluated, typically a numeric vector but possibly also a matrix or data
frame.}

\item{drop}{logical. Should the result be simplified to an unnamed vector if possible?}

\item{type}{Character string used for naming, typically on of \code{"density"}, \code{"logLik"},
\code{"probability"}, \code{"quantile"}, and \code{"random"}. Beware \code{"random"} is processed internally as a special case.}

\item{...}{Arguments to be passed to  \code{FUN}.}

\item{min, max}{Numeric vectors. Minima and Maxima supports of a \code{distributions3} object.}

\item{n}{numeric. Typically number of observations for computing random draws. If \code{length(n) > 1}, the length is taken to be the number required (consistent with base R as, e.g., for \code{rnorm()}.}
}
\description{
Various utility functions to implement vectorized \code{distributions3} objects.
These are used in the computation of moments and quantiles, in the random
generation of draws, and for returning the support for \code{distributions3} objcts.
}
